@page "/providers"

<h3> Service Providers</h3>

<div class="providers-container">
    <div class="search-filter">
        <h4>Search/Filter Hospitals</h4>
        <InputText @bind-Value="searchLocation" placeholder="Location" class="form-control" />
        <InputText @bind-Value="searchName" placeholder="Name" class="form-control" />
        <InputText @bind-Value="searchSpecialty" placeholder="Specialty" class="form-control" />
        <button @onclick="FilterProviders" class="btn btn-primary">Search</button>
    </div>

    <div class="provider-list">
        <h4>Network Hospitals</h4>
        @if (filteredProviders == null)  @* Handle null case *@
        {
            <p>Loading...</p>
        }
        else if (filteredProviders.Count == 0) @* Handle empty list case *@
        {
            <p>No providers found.</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Location</th>
                        <th>Specialty</th>
                        <th>Contact</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var provider in filteredProviders)
                    {
                        <tr>
                            <td>@provider.Name</td>
                            <td>@provider.Location</td>
                            <td>@provider.Specialty</td>
                            <td>@provider.Contact</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private string searchLocation;
    private string searchName;
    private string searchSpecialty;
    private List<Provider> providers = new(); // Initialize the list!
    private List<Provider> filteredProviders = new(); // Initialize the list!

    public class Provider
    {
        public string? Name { get; set; }      // Nullable string
        public string? Location { get; set; }  // Nullable string
        public string? Specialty { get; set; } // Nullable string
        public string? Contact { get; set; }   // Nullable string

    }

    protected override async Task OnInitializedAsync()
    {
       
        filteredProviders = new List<Provider>();

       
        await Task.Delay(500);  

        providers = new List<Provider> // Sample data - REPLACE with your data
        {
            new Provider { Name = "City Hospital", Location = "Nairobi", Specialty = "General", Contact = "0712345678" },
            // ... more providers
        };

        filteredProviders = providers; // Show all providers initially
    }


    private void FilterProviders()
    {
        if (providers == null) return; // Important null check!

        filteredProviders = providers.Where(p =>
            (string.IsNullOrEmpty(searchLocation) || p.Location.Contains(searchLocation, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrEmpty(searchName) || p.Name.Contains(searchName, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrEmpty(searchSpecialty) || p.Specialty.Contains(searchSpecialty, StringComparison.OrdinalIgnoreCase))
        ).ToList();
    }
}

   n
    <style >
    .providers-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 20px;
        max-width: 900px;
        margin: 0 auto;
    }

    .search-filter, .provider-list {
        border: 1px solid #ddd;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .table th, .table td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        .table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

    {
        display: block; /* Make the table scrollable horizontally */
        overflow-x: auto;
    }

    }
</style>